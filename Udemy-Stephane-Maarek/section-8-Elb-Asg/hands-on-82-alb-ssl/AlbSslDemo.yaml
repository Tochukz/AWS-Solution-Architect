AWSTemplateFormatVersion: 2010-09-09

Description: This template configures an Application Load Balancer that distributes traffic to a target group with two EC2 instances

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Vpc Id
  SubnetId1:
    Type: AWS::EC2::Subnet::Id
    Description: First subnet Id in the Vpc provided
  SubnetId2:
    Type: AWS::EC2::Subnet::Id
    Description: Second subnet Id in the Vpc provided
  InstanceType:
    Type: String
    Description: EC2 instance type
    AllowedValues:
      - t2.micro
      - t3.micro
    Default: t2.micro
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: Amazon Machine Image
    Default: ami-0abb41dc69b6b6704 # Amazon Linux 2 AMI 64-bit (x86)
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Keypair name
    Default: DevSimpleKey
  TemplateBucket:
    Type: String
    Description: S3 bucket where child templates are stored
  CertificateArn:
    Type: String
    Description: ACM certificate ARN
  HostedZoneName:
    Type: String
    Description: Route53 hosted zone name (e.g., example.com)
    Default: goodguys.click
  DomainName:
    Type: String
    Description: Domain name for the ALB (e.g., alb.example.com)
    Default: alb-ssl.goodguys.click

Resources:
  AlbSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AlbSecGroup
      GroupDescription: Application Load Balancer security group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Allows HTTP access
          IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - Description: Allows HTTPS access
          IpProtocol: TCP
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  WebSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebSecGroup
      GroupDescription: Web server security group SSH and HTTP
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - Description: Allow SSH access to all
          IpProtocol: TCP
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - Description: Allow HTTP traffic originating from AlbSecGroup only
          IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt AlbSecGroup.GroupId

  Ec2Instance1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.amazonaws.com/templates/AlbEc2Child.yaml
      Parameters:
        InstanceType: !Ref InstanceType
        ImageId: !Ref ImageId
        KeyName: !Ref KeyName
        SubnetId: !Ref SubnetId1
        WebSecGroup: !Ref WebSecGroup
        TagName: DemoInstance1

  Ec2Instance2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${TemplateBucket}.s3.${AWS::Region}.amazonaws.com/templates/AlbEc2Child.yaml
      Parameters:
        InstanceType: !Ref InstanceType
        ImageId: !Ref ImageId
        KeyName: !Ref KeyName
        SubnetId: !Ref SubnetId2
        WebSecGroup: !Ref WebSecGroup
        TagName: DemoInstance2

  AlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: SimpleTarget
      TargetType: instance
      Protocol: HTTP
      Port: 80
      VpcId: !Ref VpcId
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port
      HealthCheckPath: /
      Targets:
        - Id: !GetAtt Ec2Instance1.Outputs.InstanceId
        - Id: !GetAtt Ec2Instance2.Outputs.InstanceId

  AlbBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: SimpleBalancer
      Type: application
      Scheme: internet-facing
      Subnets:
        - !Ref SubnetId1
        - !Ref SubnetId2
      SecurityGroups:
        - !Ref AlbSecGroup

  HttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AlbBalancer
      Protocol: HTTPS
      Port: 443
      Certificates:
        - CertificateArn: !Ref CertificateArn
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-2021-06
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref AlbTargetGroup

  HttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref AlbBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            StatusCode: HTTP_301

  RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneName: !Sub "${HostedZoneName}."
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt AlbBalancer.DNSName
        HostedZoneId: !GetAtt AlbBalancer.CanonicalHostedZoneID

Outputs:
  DomainUrl:
    Description: ALB SSL Endpoint
    Value: !Sub https://${DomainName}
  InstanceId1:
    Description: First EC2 instance ID
    Value: !GetAtt Ec2Instance1.Outputs.InstanceId
  InstanceId2:
    Description: Second EC2 instance ID
    Value: !GetAtt Ec2Instance2.Outputs.InstanceId
