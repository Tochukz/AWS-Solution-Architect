AWSTemplateFormatVersion: 2010-09-09

Description: Creates a Secrets in AWS Secrets Manager

Resources:
  SimpleDbSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: SecretDbCreds
      Description: Database credential for RDS instance
      GenerateSecretString:
        SecretStringTemplate: '{"username": "db_usr117"}'
        GenerateStringKey: password
        PasswordLength: 16
        ExcludePunctuation: true

  DatabaseSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: SimpleDbSecGroup
      GroupDescription: Security group for RDS instance
      SecurityGroupIngress:
        - Description: Allow connection from anywhere
          IpProtocol: TCP
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0

  DbInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: mysql
      EngineVersion: 8.0
      DBInstanceIdentifier: DemoDbInstance
      DBName: agrisoft_db
      MasterUsername: !Sub "{{resolve:secretsmanager:${SimpleDbSecrets}::username}}" # A special CloudFormation syntax for dynamically resolving secrets at deployment time.
      MasterUserPassword: !Sub "{{resolve:secretsmanager:${SimpleDbSecrets}::password}}" # It tells CloudFormation: "Fetch this value from Secrets Manager when creating/updating the stack."
      DBInstanceClass: db.t3.micro
      AllocatedStorage: 20
      StorageType: gp2
      PubliclyAccessible: true
      MultiAZ: false
      VPCSecurityGroups:
        - !GetAtt DatabaseSecGroup.GroupId

Outputs:
  SecretArn:
    Description: The Secret ARN
    Value: !Ref SimpleDbSecrets
  DbEndpoint:
    Description: The endpoint of the DB instance
    Value: !GetAtt DbInstance.Endpoint.Address
