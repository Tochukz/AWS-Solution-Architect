AWSTemplateFormatVersion: 2010-09-09

Description: This template build on the hands-on-202/EcsCluster.yaml template by adding a Task Definition resource to the stack

Resources:
  CustomVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: CustomVpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: DemoInternetGateway

  VpcGatewayAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CustomVpc
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CustomVpc
      CidrBlock: 10.0.0.0/18
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CustomVpc
      CidrBlock: 10.0.64.0/18
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CustomVpc
      CidrBlock: 10.0.128.0/18
      AvailabilityZone: !Select [2, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet3

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CustomVpc

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VpcGatewayAttach
    Properties:
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
      DestinationCidrBlock: 0.0.0.0/0

  PublicSubnet1RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  EksSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: EksClusterSG
      GroupDescription: Allows HTTP access
      VpcId: !Ref CustomVpc
      SecurityGroupIngress:
        - Description: Allow HTTP access from anywhere
          IpProtocol: TCP
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

Outputs:
  VpcId:
    Description: Custom VPC Id
    Value: !Ref CustomVpc
    Export:
      Name: Network-VpcId
  EksSecurityGroupId:
    Description: Security group ID
    Value: !Ref EksSecurityGroup
    Export:
      Name: Network-EksSecurityGroupId
  PublicSubnetId1:
    Description: Subnet ID for Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: Network-PublicSubnetId1
  PublicSubnetId2:
    Description: Subnet ID for Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: Network-PublicSubnetId2
  PublicSubnetId3:
    Description: Subnet ID for Public Subnet 3
    Value: !Ref PublicSubnet3
    Export:
      Name: Network-PublicSubnetId3
