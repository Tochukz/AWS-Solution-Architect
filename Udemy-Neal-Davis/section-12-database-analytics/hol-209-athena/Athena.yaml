AWSTemplateFormatVersion: 2010-09-09

Description: Deploy an ASG with instances across two AZs and an ALB in front.

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC
  SubnetIdOne:
    Type: AWS::EC2::Subnet::Id
    Description: Select the first subnet for the ALB and Instance
  SubnetIdTwo:
    Type: AWS::EC2::Subnet::Id
    Description: Select the second subnet for the ALB and Instance
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for the EC2 instances
    Default: ami-04ba8620fc44e2264 # Amazon Linux 2023 AMI 64-bit for eu-west-2
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro

Resources:
  AlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP to the load balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from the ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AlbSecurityGroup

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: MyLaunchTemplate
      LaunchTemplateData:
        ImageId: !Ref ImageId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref InstanceSecurityGroup
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          # Fetch the token for IMDSv2
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600" || echo ""`
          # Use the token to fetch the availability zone
          if [ -n "$TOKEN" ]; then
            AZ=`curl -H "X-aws-ec2-metadata-token: $TOKEN" -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
          else
            AZ="Unknown"
          fi
          echo "<h1>This instance is in Availability Zone: $AZ</h1>" > /var/www/html/index.html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: MyAutoScalingGroup
      MinSize: "1"
      MaxSize: "2"
      DesiredCapacity: "2"
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !Ref SubnetIdOne
        - !Ref SubnetIdTwo
      TargetGroupARNs:
        - !Ref TargetGroup

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: SimpleAlb
      Subnets:
        - !Ref SubnetIdOne
        - !Ref SubnetIdTwo
      SecurityGroups:
        - !Ref AlbSecurityGroup
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref LogBucket

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      HealthCheckEnabled: true
      HealthCheckPath: /
      Matcher:
        HttpCode: "200"

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  LogBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: alb-access-logs-14-05

  LogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LogBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: logdelivery.elasticloadbalancing.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "${LogBucket.Arn}/AWSLogs/*"

Outputs:
  LoadBalancerDnsName:
    Description: DNS name of the load balancer
    Value: !GetAtt LoadBalancer.DNSName
